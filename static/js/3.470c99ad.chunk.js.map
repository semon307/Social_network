{"version":3,"sources":["HOC/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","Graphics/Images/1299.jpeg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","status","title","setTitle","useEffect","onChange","e","currentTarget","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","s","image","src","alt","descriptionBlock","photos","small","fullName","contacts","facebook","vk","github","lookingForAJob","aboutMe","Preloader","Post","item","img","message","likesCount","maxLength","maxLengthCreator","MyPostsReduxForm","addMessageAC","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","name","validate","required","MyPosts","postElements","profilePage","posts","map","p","id","postBlock","formData","addPost","textarea","MyPostsContainer","dispatch","body","addPostAC","Profile","content","ProfileContainer","this","match","params","userId","authorizedUserId","toString","history","setUserProfileTC","setStatusTC","updateStatusTC","React","compose","withRouter"],"mappings":"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","file":"static/js/3.470c99ad.chunk.js","sourcesContent":["import React, {Component, ComponentType} from \"react\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {ProfileType} from \"../redux/profile-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\nexport function withAuthRedirect <T>(Component: ComponentType<T>){\n    function RedirectComponent(props: mapStateToPropsType) {\n        let {isAuth, ...restProps} = props;\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>;\n        return <Component {...restProps as T}/>\n    }\n\n    let RedirectedComponent = connect(mapStateToProps)(RedirectComponent)\n    return RedirectedComponent\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"image\":\"ProfileInfo_image__3wY_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"img\":\"Post_img__38ehp\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {ChangeEvent, useEffect} from \"react\";\nimport {useState} from \"react\";\nimport {ProfileType} from \"../../../redux/profile-reducer\";\ntype ProfileStatusPropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const [title, setTitle] = useState<string>(props.status)\n    useEffect(() => setTitle(props.status), [props.status])\n    const onDoubleClickCallback = () => {\n        setEditMode(true)\n    }\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n    const onBlurCallBack = () => {\n        editMode && setEditMode(false)\n        props.updateStatus(title)\n    }\n    return editMode\n            ? <div><input title={title} onChange={onChangeCallback} onBlur={onBlurCallBack}/></div>\n            : <div><span onDoubleClick={onDoubleClickCallback}>{title || \"NO STATUS\"}</span></div>\n\n}","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\"\nimport {ProfilePropsType} from \"../Profile\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {ProfileStatus} from \"./ProfileStatus\";\n\nconst ProfileInfo = (props: ProfilePropsType) => {\n    if (!props.profile){\n        return <Preloader />\n    }\n    return (\n        <div>\n            <div className={s.image}>\n                <img\n\n                    src={\"https://signatours.imgix.net/usa/florida/miami/strand_miami_florida_ss.jpg?w=1440&h=550&auto=compress,format&fit=crop\"}\n                    alt={\"img\"}/>\n            </div>\n\n            <div className={s.descriptionBlock}>\n                <img src={props.profile?.photos.small}/>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n                <div>Full Name: {props.profile?.fullName}</div>\n                <div>Contacts:\n                    <div>Facebook: {props.profile?.contacts.facebook}</div>\n                    <div>VK: {props.profile?.contacts.vk}</div>\n                    <div>GitHub: {props.profile?.contacts.github}</div>\n                    </div>\n                <div>Looking for a job: {props.profile?.lookingForAJob ? \"Yes\" : \"NO\"}</div>\n\n                <div>About me: {props.profile?.aboutMe}</div>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/1299.09bf7bc7.jpeg\";","import React from \"react\";\nimport s from \"./Post.module.css\"\nimport {PostType} from \"../../../../redux/store\";\nimport image from \"../../../../Graphics/Images/1299.jpeg\"\n\nconst Post: React.FC<PostType> = (props) => {\n    return (\n        <div>\n            <div className={s.item}>\n\n                <img alt=\"\" className={`${s.item} ${s.img}`} src={image} />\n                {props.message}\n                <div><span>{`Likes: ${props.likesCount}`}</span></div>\n            </div>\n\n        </div>\n    )\n}\nexport default Post;","import React from \"react\";\nimport s from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../redux/store\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {addMessageAC} from \"../../../redux/dialogs-reducer\";\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/Validator\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\n// export type MyPostsType = {\n//     posts: Array<PostType>\n//     newPostText: string\n//     onPostChange: (text: string) => void\n//     addPost: () => void\n// }\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\n    const postElements = props.profilePage.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount}/>)\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\n    // const onPostChange = () => {\n    //     if (newPostElement.current) {\n    //         let text = newPostElement.current.value;\n    //         props.onPostChange(text)\n    //     }\n    // }\n    const addPost = (formData: MyPostsFormDataType) => {\n        props.addPost(formData.textarea);\n    }\n    return (\n        <div className={s.postBlock}>\n            <div>\n                <h3>My Posts</h3>\n            </div>\n            <div>\n                {/*<div>*/}\n                {/*    <textarea ref={newPostElement} value={props.profilePage.newPostText} onChange={()=>{onPostChange()}}></textarea>*/}\n                {/*</div>*/}\n                {/*<div>*/}\n                {/*    <button onClick={addPost}>Add Post</button>*/}\n                {/*</div>*/}\n                <MyPostsReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={s.posts}>\n                {postElements}\n            </div>\n\n\n        </div>\n    )\n}\ntype MyPostsFormDataType = {\n    textarea: string\n\n}\nconst maxLength = maxLengthCreator(30)\nexport const MyPostsForm: React.FC<InjectedFormProps<MyPostsFormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div><Field placeholder={\"Type your post here!\"} component={TextArea} name={\"textarea\"}\n            validate={[required, maxLength]}/></div>\n            <div><button>Add Post</button></div>\n\n        </form>\n    )\n}\nlet MyPostsReduxForm = connect(null, {addMessageAC})(reduxForm<MyPostsFormDataType>({ form: \"myPostsForm\" })(MyPostsForm))\n\nexport default MyPosts;","import React from \"react\";\nimport {addPostAC} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {ProfilePageType} from \"../../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nexport type MapStateToPropsType = {\n    profilePage: ProfilePageType\n}\nexport type MapDispatchToPropsType = {\n\n    addPost: (text: string) => void\n}\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        addPost: (body: string) => {\n            dispatch(addPostAC(body))\n        }\n        }\n    }\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer;","import React from \"react\";\nimport s from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../redux/profile-reducer\";\n\nexport type ProfilePropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: (status: string) => void\n}\nconst Profile1 = (props: ProfilePropsType) =>{}\nconst Profile: React.FC<ProfilePropsType> = (props) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo status={props.status} updateStatus={props.updateStatus} profile={props.profile}/>\n            <div>\n                <MyPostsContainer />\n            </div>\n        </div>\n\n    )\n}\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {ProfileType, setStatusTC, setUserProfileTC, updateStatusTC} from \"../../redux/profile-reducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n// import {RouteComponentProps, withRouter} from \"react-router-dom\";\ntype mapStateToPropsType = {\n    profile: ProfileType | null\n    status: string\n    authorizedUserId: number | null\n    isAuth: boolean\n}\ntype mapDispatchToPropsType = {\n    setUserProfileTC: (id: string) => void\n    setStatusTC: (id: string) => void\n    updateStatusTC: (status: string) => void\n}\ntype PathParamTYpe = {\n    userId: string\n}\ntype OwnProfileContainerPropsType = mapStateToPropsType & mapDispatchToPropsType\ntype ProfileContainerPropsType = RouteComponentProps<PathParamTYpe> & OwnProfileContainerPropsType\n\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\n    componentDidMount() {\n        let id =  this.props.match.params.userId\n        if (!id){\n            id = this.props.authorizedUserId ? this.props.authorizedUserId.toString() : \"18303\";\n            if (!id){\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.setUserProfileTC(id)\n        this.props.setStatusTC(id)\n\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatusTC}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.id,\n        isAuth: state.auth.isAuth\n    }\n}\n//export default withAuthRedirect(connect(mapStateToProps, {setUserProfileTC})(withRouter<any, any>(ProfileContainer)))\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {setUserProfileTC, setStatusTC, updateStatusTC}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}